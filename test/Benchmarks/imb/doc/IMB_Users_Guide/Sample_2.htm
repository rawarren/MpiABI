
<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">
<!-- saved from url=(0014)about:internet -->
<html>
<head>

<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
 <meta name="generator" content="Adobe RoboHelp 10">
<title>Sample 2 - IMB-MPI1 PingPing Allreduce</title>
<link rel="StyleSheet" href="styles_w_rh_ict.css" type="text/css">
</head>

<script src="NavScript.js" language="JavaScript1.2" type="text/javascript"></script>
<script language="JavaScript1.2" type="text/javascript">WriteNavLink(0);</script>
<body>
<script type="text/javascript" src="ehlpdhtm.js" language="JavaScript1.2"></script>

<div style="width: 100%; position: relative;" id="header">
	
 <p style="font-style: italic;">IntelÂ® 
	 MPI Benchmarks 4.0</p>
</div>


<h1>Sample 2 - IMB-MPI1 PingPing Allreduce</h1>
<p>The following example shows the results of the <samp class="codeph">PingPing</samp></p>
<pre>
&lt;..&gt; 
&#160;-np 6 IMB-MPI1
&#160;&#160;pingping&#160;allreduce&#160;-map&#160;2x3&#160;-msglen&#160;Lengths&#160;-multi&#160;0
Lengths&#160;file:
0
100
1000
10000
100000
1000000
#---------------------------------------------------
# Intel (R) MPI Benchmark Suite&#160;V3.2.2, MPI1 part
#---------------------------------------------------
# Date&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:&#160;Thu&#160;Sep&#160;4&#160;13:26:03&#160;2008
# Machine&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:&#160;x86_64
# System&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:&#160;Linux
# Release&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:&#160;2.6.9-42.ELsmp
# Version&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:&#160;#1&#160;SMP&#160;Wed&#160;Jul&#160;12&#160;23:32:02&#160;EDT&#160;2006
# MPI Version&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:&#160;2.0
# MPI Thread Environment: MPI_THREAD_SINGLE<br>
# New default behavior from Version 3.2 on:
# the number of iterations per message size is cut down
# dynamically when a certain run time (per message&#160;size&#160;sample)
# is expected to be exceeded. Time limit is defined&#160;by&#160;variable
# SECS_PER_SAMPLE (=&gt; IMB_settings.h)
# or through the flag =&gt; -time<br>&#160;
# Calling sequence was:
# IMB-MPI1 pingping allreduce -map 3x2 -msglen Lengths
#&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;-multi&#160;0<br>
# Message lengths were user-defined
#
# MPI_Datatype&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:&#160;&#160;&#160;MPI_BYTE
#&#160;MPI_Datatype for reductions&#160;&#160;&#160;&#160;:&#160;&#160;&#160;MPI_FLOAT
# MPI_Op&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;:&#160;&#160;&#160;MPI_SUM&#160;
#
#
# List of Benchmarks to run:
# (Multi-)PingPing
# (Multi-)Allreduce
#--------------------------------------------------------------
# Benchmarking Multi-PingPing
# ( 3 groups of 2 processes each running simultaneously )
# Group&#160;&#160;0:&#160;&#160;&#160;&#160;&#160;0&#160;&#160;&#160;&#160;3
#
# Group&#160;&#160;1:&#160;&#160;&#160;&#160;&#160;1&#160;&#160;&#160;&#160;4
#
# Group&#160;&#160;2:&#160;&#160;&#160;&#160;&#160;2&#160;&#160;&#160;&#160;5
#
#--------------------------------------------------------------
# bytes #rep.s t_min[&#956;sec] t_max[&#956;sec] t_avg[&#956;sec]&#160;Mbytes/sec
&#160;&#160;&#160;&#160;&#160;&#160;0&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;..&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;..&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;..&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;..
&#160;&#160;&#160;&#160;100&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;&#160;1000&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;10000&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;
&#160;100000&#160;&#160;&#160;&#160;419&#160;&#160;&#160;&#160;&#160;
1000000&#160;&#160;&#160;&#160;&#160;41&#160;&#160;&#160;&#160;
#--------------------------------------------------------------
# Benchmarking Multi-Allreduce
# ( 3 groups of 2 processes each running simultaneously )
# Group&#160;&#160;0:&#160;&#160;&#160;&#160;&#160;0&#160;&#160;&#160;&#160;3
#
# Group&#160;&#160;1:&#160;&#160;&#160;&#160;&#160;1&#160;&#160;&#160;&#160;4
#
# Group&#160;&#160;2:&#160;&#160;&#160;&#160;&#160;2&#160;&#160;&#160;&#160;5
#
#--------------------------------------------------------------
#bytes #repetitions&#160;&#160;t_min[&#956;sec]&#160;&#160;t_max[&#956;sec]&#160;&#160;t_avg[&#956;sec]
&#160;&#160;&#160;&#160;&#160;&#160;0&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;..&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;..&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;..
&#160;&#160;&#160;&#160;100&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;10000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;100000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;419&#160;&#160;&#160;&#160;&#160;&#160;
1000000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;41&#160;&#160;&#160;&#160;&#160;
&#160;&#160;
#--------------------------------------------------------------
# Benchmarking Allreduce
# 
#processes = 4; rank order (rowwise):
#&#160;&#160;&#160;&#160;&#160;0&#160;&#160;&#160;&#160;3
#
#&#160;&#160;&#160;&#160;&#160;1&#160;&#160;&#160;&#160;4
#
# ( 2 additional processes waiting in MPI_Barrier)
#--------------------------------------------------------------
# bytes #repetitions&#160;&#160;t_min[&#956;sec]&#160;&#160;t_max[&#956;sec]&#160;&#160;t_avg[&#956;sec]
&#160;&#160;&#160;&#160;&#160;&#160;0&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;..&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;..&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;..
&#160;&#160;&#160;&#160;100&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;10000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;
&#160;100000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;419&#160;&#160;&#160;&#160;&#160;
1000000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;41&#160;&#160;
#--------------------------------------------------------------
# Benchmarking Allreduce
# 
# processes = 6; rank order (rowwise):
#&#160;&#160;&#160;&#160;&#160;0&#160;&#160;&#160;&#160;3
#
#&#160;&#160;&#160;&#160;&#160;1&#160;&#160;&#160;&#160;4
#
#&#160;&#160;&#160;&#160;&#160;2&#160;&#160;&#160;&#160;5
#
#--------------------------------------------------------------
# bytes #repetitions&#160;&#160;t_min[&#956;sec]&#160;&#160;t_max[&#956;sec]&#160;&#160;t_avg[&#956;sec]
&#160;&#160;&#160;&#160;&#160;&#160;0&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;..&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;..&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;..
&#160;&#160;&#160;&#160;100&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;&#160;
&#160;&#160;10000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;1000&#160;&#160;&#160;&#160;&#160;&#160;
&#160;100000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;419&#160;&#160;&#160;&#160;&#160;
1000000&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;41&#160;&#160;
&#160;
# All processes entering MPI_Finalize&#160;</pre>

<div>
<div class="docfeedback">
	<p style="font-family: Verdana, sans-serif; font-size: 10pt; font-weight: bold; 
		 color: #0860A8;"><span 
	 style="font-weight: bold; color: #0860A8;"><a href="http://www.intel.com/software/products/softwaredocs_feedback" 
													 target="_blank" style="text-decoration: none; "><b>Submit 
	 feedback on this help topic</b></a></span></p>
</div>
</div>
</body>
</html>
